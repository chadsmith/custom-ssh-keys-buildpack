#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir> <env-dir>

# Generates an SSH config file for connections if a config var exists.

ENV_DIR=$3

if [[ -f $ENV_DIR/CUSTOM_SSH_KEYS && -f $ENV_DIR/CUSTOM_SSH_HOSTS ]]; then

  echo "" >&1

  # Ensure we have an ssh folder
  if [ ! -d ~/.ssh ]; then
    mkdir -p ~/.ssh
    chmod 700 ~/.ssh
  fi
  
  # Split $CUSTOM_SSH_KEYS and CUSTOM_SSH_HOSTS
  IFS=',';
  CUSTOM_SSH_KEYS=`cat $ENV_DIR/CUSTOM_SSH_KEYS`;
  CUSTOM_SSH_HOSTS=`cat $ENV_DIR/CUSTOM_SSH_HOSTS`;
  i=0;

  # Iterate over each key and add to custom key file
  for key in $CUSTOM_SSH_KEYS;
  do
    echo "$key" | base64 --decode > ~/.ssh/custom_key_$i
    # Change the permissions on the file to be read-only for this user.
    chmod 400 ~/.ssh/custom_key_$i
    echo -e "Host ${CUSTOM_SSH_HOSTS[$i]}\n"\
            "     User git\n"\
            "     IdentityFile ~/.ssh/custom_key_$i\n"\
            >> ~/.ssh/config
    echo "-----> Successfully added custom SSH key #$i"
    i=$((i + 1))
  done

  for host in $CUSTOM_SSH_HOSTS;
  do
    ssh-keyscan -t rsa $host >> ~/.ssh/known_hosts
  done
fi
